Lecture 05, Jan 23 2015

* Typedefs
  Allows you to create an alias for a type
  typedef <extant type> <new name>;
  typedef int time_t;
* Structures
  Records in C; classes are based on these.
  Use the struct keyword

  struct <name> {
    <typename> <fieldname>;
    ....
    ....
  };

** Accessing fields
   dot vs. arrow
   Accessing a field in a struct is done with two operators, the dot 
   operator and the arrow operator.
   The arrow operator is used when the structure is accessed through a
   pointer.  The is the only type we used in class.
   If you have an instance of a struct, you access it with the dot operator
   instead.  I've added a bit of code to illustrate this in the main function
   of queue.c
* More on pointers
** Last time we covered pointer syntax, but not why they are useful
*** Parameter passing in C
    It's faster to pass structs by address.
    A struct passed by value is copied, so changes to its fields
    "disappear" when the function returns.
    On the other hand, when passed by address, the changes persist.
    Arguably, it's safer to pass by value if you make no changes, but
    you can pass a constant pointer for that and still get the speed
    advantage.
*** Dynamic allocation
    Dynamic storage is allocated with malloc(3).  Any time you allocate
    something, you must return it to the system with free(3).  In order
    to use these functions, you need to include stdlib.h.
    It is possible for malloc() to fail.  When it does, it returns NULL.
    You should check for this!  We didn't in class, but I've modified
    the queue program to handle it, and I'll talk about it in a future
    class.

